@using Newtonsoft.Json;
@using ProjectFive.AppFunctions;
@model double[]
@inject CookieHandler Handler
@{
    ViewData["Title"] = "Statistics of Reviews";
    Context.Request.Cookies.TryGetValue("UserCookie", out string value);
    string role = "";
    if (value != null)
    {
        role = Handler.ReadCookie("Role", value);

    }

    

}

<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet" href="/css/restaurant.css" />
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>

        table {
            text-align: center;
        }

        th, td {
            justify-content: center;
        }
    </style>
</head>

<body>
    <header>
        <div class="navbar">
            <div class="logo"><a href="#">DishDetective</a></div>
            <ul class="links">
                <li><a asp-action="Restaurants" asp-controller="Restaurant">Home</a></li>
                <li><a asp-action="Restaurants" asp-controller="Restaurant">Restaurants</a></li>
                @{
                    if (role == "Representative")
                    {
                        <li><a asp-action="Representative" asp-controller="Reservation">Reservations</a></li>
                        <li><a asp-action="Rep" asp-controller="Review">Reviews</a></li>
                    }
                    else if (role == "Reviewer")
                    {
                        <li><a asp-action="Review" asp-controller="Review">Reviews</a></li>
                    }
                }

            </ul>
            @{
                if (value != null)
                {
                    <a asp-action="Logout" asp-controller="Login" class="action_btn">Logout</a>
                }
                else
                {
                    <a asp-action="Login" asp-controller="Login" class="action_btn">Login</a>
                }
            }
            <div class="toggle_btn">
                <i class="fa-solid fa-bars"></i>
            </div>
        </div>

        <div class="dropdown_menu">
            <li><a href="home">Home</a></li>
            <li><a href="restaurant">Restaurants</a></li>
            <li><a href="reservation">Reservations</a></li>
            <li><a href="review">Reviews</a></li>
            <li><a href="#" class="action_btn">Login</a></li>
        </div>
    </header>
    <br />
    <br />

    <div class="text-center">
        <h4 class="display-4" style="color:#fff;">Average Ratings</h4>
        <div class="card">
            <div class="card-header">
                <div class="chart">
                    <canvas id="barchart"></canvas>
                </div>
            </div>
        </div>
    </div>


    <script>

        var chartCanvas = document.getElementById("barchart");
        var data = @Html.Raw(JsonConvert.SerializeObject(Model));

        var Food = [];
        var Service = [];
        var Atmosphere = [];
        var Pricing = [];
        var Users = [];

        var myChart = new Chart(chartCanvas, {
            type: 'bar',
            data: {
                labels: ['Food Rating', 'Service Rating', 'Atmosphere Rating', 'Price Rating'],
                datasets: [{
                    label: 'Ratings',
                    data: data,
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    </script>
</body>